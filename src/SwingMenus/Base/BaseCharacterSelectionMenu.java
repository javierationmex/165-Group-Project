package swingMenus.Base;

import game.Characters.CharacterListOption;
import game.Player;
import swingMenus.Multiplayer.data.PlayerInfo;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Vector;

/**
 * Created by Max on 3/22/2015.
 */
public class BaseCharacterSelectionMenu {
    private JPanel mainView;
    private JLabel title;
    private JButton readyButton;
    private JButton startGameButton;
    private JPanel CharacterListPanel;
    private Player player;
    private Vector<CharacterListOption> characterOptions; // change to characters we make in the future

    public BaseCharacterSelectionMenu(Player player) {
        this.player = player;
        characterOptions = new Vector<CharacterListOption>();
        $$$setupUI$$$();
        characterOptions.add(new CharacterListOption("Cube", 0));
        characterOptions.add(new CharacterListOption("Pyramid", 1));
    }

    public JPanel getMainView() {
        return mainView;
    }

    public void updatePlayerList(ArrayList<PlayerInfo> players) {
        CharacterListPanel = new JPanel(new GridBagLayout());
        //mainView.add(CharacterListPanel);
        if (players == null) {
            players = new ArrayList<PlayerInfo>();
            players.add(new PlayerInfo(player.getPlayerUUID(), player.getPlayerName()));
        }
        int lastRow = 0;
        for (PlayerInfo p : players) {
            JLabel playerNameLabel = new JLabel(p.getPlayerName());
            JLabel characterLabel = new JLabel("Character:");
            JComboBox characterSelectionComboBox = new JComboBox();
            JCheckBox readyCheckBox = new JCheckBox("Ready", false);
            CharacterListPanel.getLayout().addLayoutComponent("Player Name", playerNameLabel);
            CharacterListPanel.getLayout().addLayoutComponent("Character Label", characterLabel);
            CharacterListPanel.getLayout().addLayoutComponent("Character ComboBox", characterSelectionComboBox);
            CharacterListPanel.getLayout().addLayoutComponent("Ready CheckBox", readyCheckBox);
        }
        CharacterListPanel.setVisible(true);
    }

    private void createUIComponents() {
        updatePlayerList(null);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        mainView = new JPanel();
        mainView.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        title = new JLabel();
        title.setHorizontalAlignment(0);
        title.setHorizontalTextPosition(0);
        title.setText("Pick Your Characters and Game Settings");
        mainView.add(title, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mainView.add(CharacterListPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainView.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_SOUTH, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        readyButton = new JButton();
        readyButton.setText("Ready");
        panel1.add(readyButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        startGameButton = new JButton();
        startGameButton.setEnabled(false);
        startGameButton.setText("StartGame");
        panel1.add(startGameButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainView;
    }
}
